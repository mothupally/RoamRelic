{"ast":null,"code":"// Service Worker registration utilities\nconst isLocalhost=Boolean(window.location.hostname==='localhost'||window.location.hostname==='[::1]'||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));export function register(config){if('serviceWorker'in navigator){const publicUrl=new URL(process.env.PUBLIC_URL,window.location.href);if(publicUrl.origin!==window.location.origin){return;}window.addEventListener('load',()=>{const swUrl=\"\".concat(process.env.PUBLIC_URL,\"/sw.js\");if(isLocalhost){checkValidServiceWorker(swUrl,config);navigator.serviceWorker.ready.then(()=>{console.log('This web app is being served cache-first by a service worker.');});}else{registerValidSW(swUrl,config);}});}}function registerValidSW(swUrl,config){navigator.serviceWorker.register(swUrl).then(registration=>{registration.onupdatefound=()=>{const installingWorker=registration.installing;if(installingWorker==null){return;}installingWorker.onstatechange=()=>{if(installingWorker.state==='installed'){if(navigator.serviceWorker.controller){console.log('New content available; please refresh.');if(config&&config.onUpdate){config.onUpdate(registration);}}else{console.log('Content cached for offline use.');if(config&&config.onSuccess){config.onSuccess(registration);}}}};};}).catch(error=>{console.error('Error during service worker registration:',error);});}function checkValidServiceWorker(swUrl,config){fetch(swUrl,{headers:{'Service-Worker':'script'}}).then(response=>{const contentType=response.headers.get('content-type');if(response.status===404||contentType!=null&&contentType.indexOf('javascript')===-1){navigator.serviceWorker.ready.then(registration=>{registration.unregister().then(()=>{window.location.reload();});});}else{registerValidSW(swUrl,config);}}).catch(()=>{console.log('No internet connection found. App is running in offline mode.');});}export function unregister(){if('serviceWorker'in navigator){navigator.serviceWorker.ready.then(registration=>{registration.unregister();}).catch(error=>{console.error(error.message);});}}","map":{"version":3,"names":["isLocalhost","Boolean","window","location","hostname","match","register","config","navigator","publicUrl","URL","process","env","PUBLIC_URL","href","origin","addEventListener","swUrl","concat","checkValidServiceWorker","serviceWorker","ready","then","console","log","registerValidSW","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","fetch","headers","response","contentType","get","status","indexOf","unregister","reload","message"],"sources":["/workspaces/RoamRelic/src/serviceWorkerRegistration.ts"],"sourcesContent":["// Service Worker registration utilities\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    window.location.hostname === '[::1]' ||\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config?: {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}) {\n  if ('serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL!, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/sw.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service worker.'\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log('New content available; please refresh.');\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log('Content cached for offline use.');\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}) {\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}